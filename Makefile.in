LIBRARY=@LIBRARY@
DBGVIEW=@DEBUG@
TGTRLS=@TARGET_RELEASE@

COMMON=\
	plugconf.module \
	plugbug.module \
	plugipc.module \
	plugrun.module \
	plugperf.module \
	plugcach.module \
	plugerr.module \
	plugsql.module \
	plugdb2.module \
	plugpase.module \
	pluglic.module \
	plugsig.module \
	plugconv.module \
	plugxml.module \
	plugile.module

TEST_PGMS=\
	zzbigboy.pgm \
	zzcall.pgm \
	zzcust.pgm \
	zzdeep.pgm \
	zzerich.pgm \
	zzjava.pgm \
	zzjava2.pgm \
	zzmore.pgm \
	zznone.pgm \
	zzshlomo.pgm \
	zzsimp.pgm \
	zzvlad.pgm \
	zzvlad2.pgm \
	zzvlad3.pgm

TEST_SRVPGMS=\
	zzsrv.srvpgm \
	zzsrv6.srvpgm

XMLSTOREDP_MODULES=xmlstoredp.module $(COMMON)

XMLSERVICE_OBJECTS=\
	xmlmain.pgm \
	xmlservice.pgm \
	xmlver.pgm \
	xmlstoredp.srvpgm \
	xmlstoredp.sqlinst \
	xmlcgi.pgm

# Ensure that intermediate files created by rules chains don't get
# automatically deleted
.PRECIOUS: %.module %.srcpf %.lib

all: build-all

build-all: build-xmlservice build-test

prod: build-main build-procedure build-cgi prod-clean

build: build-main build-procedure build-cgi build-test

build-xmlservice: build-main build-procedure build-cgi

build-main: $(LIBRARY).lib xmlmain.pgm xmlservice.pgm xmlver.pgm

build-procedure: $(LIBRARY).lib xmlstoredp.srvpgm xmlstoredp.sqlinst

build-cgi: $(LIBRARY).lib xmlcgi.pgm

build-test: $(TEST_PGMS) $(TEST_SRVPGMS)

savf: xmlservice-full.savf.xz xmlservice.savf.xz xmlservice-tests.savf.xz

prod-clean:
	rm -f *.module *.srcpf
	rm -rf /qsys.lib/$(LIBRARY).lib/*.FILE
	rm -rf /qsys.lib/$(LIBRARY).lib/*.MODULE

clean:
	rm -f *.lib *.pgm *.srvpgm *.module *.sqlinst *.srcpf
	system -q 'DLTLIB $(LIBRARY)' || :

xmlmain.pgm: xmlmain.module $(COMMON)
	system -q "CRTPGM PGM($(LIBRARY)/$(@:%.pgm=%)) MODULE($(^:%.module=$(LIBRARY)/%)) TGTRLS($(TGTRLS))" && touch $@

xmlservice.pgm: xmlservice.module $(COMMON)
	system -q "CRTPGM PGM($(LIBRARY)/$(@:%.pgm=%)) MODULE($(^:%.module=$(LIBRARY)/%)) TGTRLS($(TGTRLS))" && touch $@

xmlver.pgm: xmlver.module
	system -q "CRTPGM PGM($(LIBRARY)/$(@:%.pgm=%)) MODULE($(^:%.module=$(LIBRARY)/%)) TGTRLS($(TGTRLS))" && touch $@

xmlcgi.pgm: xmlcgi.module $(COMMON)
	system -q "CRTPGM PGM($(LIBRARY)/$(@:%.pgm=%)) MODULE($(^:%.module=$(LIBRARY)/%)) BNDSRVPGM(QHTTPSVR/QZSRCORE) TGTRLS($(TGTRLS))" && touch $@

xmlstoredp.srvpgm: qsrvsrc.srcpf $(XMLSTOREDP_MODULES)
	system -q "CPYFRMSTMF FROMSTMF('src/$(@:%.srvpgm=%).bnd') TOMBR('/qsys.lib/$(LIBRARY).lib/qsrvsrc.file/$(@:%.srvpgm=%).mbr') MBROPT(*REPLACE)"
	system -q "CRTSRVPGM SRVPGM($(LIBRARY)/$(@:%.srvpgm=%)) MODULE($(XMLSTOREDP_MODULES:%.module=$(LIBRARY)/%)) EXPORT(*SRCFILE) SRCFILE($(LIBRARY)/QSRVSRC) ACTGRP(*CALLER) TGTRLS($(TGTRLS))" && touch $@

%.pgm: src/%.clp qclsrc.srcpf
	system -q "CPYFRMSTMF FROMSTMF('$<') TOMBR('/qsys.lib/$(LIBRARY).lib/qclsrc.file/$*.mbr') MBROPT(*REPLACE)"
	system -q "CRTCLPGM PGM($(LIBRARY)/$*) SRCFILE($(LIBRARY)/QCLSRC) TGTRLS($(TGTRLS))"
	touch $@

%.pgm: %.module
	system -q "CRTPGM PGM($(LIBRARY)/$(@:%.pgm=%)) MODULE($(^:%.module=$(LIBRARY)/%)) TGTRLS($(TGTRLS))" && touch $@

%.srvpgm: %.module
	system -q "CRTSRVPGM SRVPGM($(LIBRARY)/$(@:%.srvpgm=%)) MODULE($(^:%.module=$(LIBRARY)/%)) EXPORT(*ALL) ACTGRP(*CALLER) TGTRLS($(TGTRLS))" && touch $@

%.sqlinst: src/%.sql
	system -q "RUNSQLSTM SRCSTMF('$<')" && touch $@

%.module: src/%.rpgle
	system "CRTRPGMOD MODULE($(LIBRARY)/$*) SRCSTMF('$<') DBGVIEW($(DBGVIEW)) REPLACE(*YES) TGTCCSID(37) TGTRLS($(TGTRLS))" > $*.log 2> $*.msg && rm $*.log $*.msg || touch $*.failed
	test ! -e $*.msg || cat $*.msg
	test ! -e $*.log || ./parse.sh $*.log
	if [ -e $*.failed ]; then rm $*.failed; exit 1; fi
	touch $@

%.module: src/%.sqlrpgle
	system "CRTSQLRPGI OBJ($(LIBRARY)/$*) SRCSTMF('$<') OBJTYPE(*MODULE) REPLACE(*YES) RPGPPOPT(*LVL2) COMPILEOPT('INCDIR(''src/'') TGTCCSID(37)') TGTRLS($(TGTRLS))" > $*.log 2> $*.msg && rm $*.log $*.msg || touch $*.failed
	test ! -e $*.msg || cat $*.msg
	test ! -e $*.log || ./parse.sh $*.log
	if [ -e $*.failed ]; then rm $*.failed; exit 1; fi
	touch $@

%.module: src/%.c
	system "CRTCMOD MODULE($(LIBRARY)/$*) SRCSTMF('$<') DBGVIEW($(DBGVIEW)) REPLACE(*YES) TGTCCSID(37) TGTRLS($(TGTRLS))" > $*.log 2> $*.msg && rm $*.log $*.msg || touch $*.failed
	test ! -e $*.msg || cat $*.msg
	test ! -e $*.log || cat $*.log
	if [ -e $*.failed ]; then rm $*.failed; exit 1; fi
	touch $@

%.lib:
	(system -q 'CHKOBJ $* *LIB' || system -q 'CRTLIB $*') && touch $@

%.srcpf: $(LIBRARY).lib
	(system -q 'CHKOBJ $(LIBRARY)/$* *FILE' || system -q 'CRTSRCPF $(LIBRARY)/$*') && touch $@

xmlservice-full.savf.xz: $(XMLSERVICE_OBJECTS) $(TEST_PGMS) $(TEST_SRVPGMS)
	system -q 'CRTSAVF $(LIBRARY)/XMLSRVFULL' || :
	system -q "SAVLIB LIB($(LIBRARY)) DEV(*SAVF) SAVF($(LIBRARY)/XMLSRVFULL) TGTRLS($(TGTRLS)) CLEAR(*ALL) OMITOBJ((*ALL *MODULE) (*ALL *FILE))"
	xz < /qsys.lib/$(LIBRARY).lib/XMLSRVFULL.file > $@

xmlservice.savf.xz: $(XMLSERVICE_OBJECTS)
	system -q 'CRTSAVF $(LIBRARY)/XMLSRVONLY' || :
	system -q "SAVLIB LIB($(LIBRARY)) DEV(*SAVF) SAVF($(LIBRARY)/XMLSRVONLY) TGTRLS($(TGTRLS)) CLEAR(*ALL) OMITOBJ((*ALL *MODULE) (*ALL *FILE) (ZZ*))"
	xz < /qsys.lib/$(LIBRARY).lib/XMLSRVONLY.file > $@

xmlservice-tests.savf.xz: $(TEST_PGMS) $(TEST_SRVPGMS)
	system -q 'CRTSAVF $(LIBRARY)/XMLSRVTEST' || :
	system -q "SAVLIB LIB($(LIBRARY)) DEV(*SAVF) SAVF($(LIBRARY)/XMLSRVTEST) TGTRLS($(TGTRLS)) CLEAR(*ALL) OMITOBJ((*ALL *MODULE) (*ALL *FILE)) SELECT((*INCLUDE ZZ*))"
	xz < /qsys.lib/$(LIBRARY).lib/XMLSRVTEST.file > $@

