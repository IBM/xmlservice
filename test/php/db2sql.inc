<?php
// see connection.inc param details ...
require_once('connection.inc');

// -----------------
// schema
// -----------------
$db2_crt_schema = "create schema $schematest";

// -----------------
// table animal
// -----------------
$db2_drp_animal = <<<SQLDRPANIMAL
drop table animal
SQLDRPANIMAL;

$db2_crt_animal = <<<SQLCRTANIMAL
create table animal(
 id integer, breed varchar(32), name char(16),
 weight decimal(7,2), height numeric(9,2))
SQLCRTANIMAL;

$db2_prep_animal = <<<SQLADDANIMAL
insert into
animal (id, breed, name, weight, height)
values (?,?,?,?,?)
SQLADDANIMAL;

$animals = array(
      array(1, 'cat',        'Pook',         3.2,   9.56),
      array(2, 'dog',        'Peaches',      12.3,  22.65),
      array(3, 'horse',      'Smarty',       350.0, 400.23),
      array(4, 'gold fish',  'Bubbles',      0.1,   1.2),
      array(5, 'budgerigar', 'Gizmo',        0.2,   5.4),
      array(6, 'goat',       'Rickety Ride', 9.77,   18.9),
      array(7, 'llama',      'Sweater',      150,   300)
      );

// -----------------
// table animal1 (clob/blob)
// -----------------
$db2_drp_animal1 = <<<SQLDRPANIMAL1
drop table animal1
SQLDRPANIMAL1;

$db2_crt_animal1 = <<<SQLCRTANIMAL1
create table animal1(
 id integer, essay clob(32100), picture blob(32100))
SQLCRTANIMAL1;

$db2_prep_animal1 = <<<SQLADDANIMAL1
insert into
animal1 (id, essay, picture)
values (?,?,?)
SQLADDANIMAL1;

// ------------
// stored procedure 1
// ------------
$db2_drp_sp1 = <<<SQLDRPSP1
DROP PROCEDURE match1
SQLDRPSP1;

$db2_crt_sp1 = <<<SQLCRTSP1
CREATE PROCEDURE match1(
IN first_name VARCHAR(128), IN second_name VARCHAR(128),
INOUT any_name VARCHAR(128), OUT animal_weight DOUBLE)
DYNAMIC RESULT SETS 1
LANGUAGE SQL
BEGIN
DECLARE match_name INT DEFAULT 0;
DECLARE c1 CURSOR FOR SELECT COUNT(*) FROM animal WHERE name IN (second_name);
DECLARE c2 CURSOR FOR SELECT SUM(weight) FROM animal WHERE name in (first_name, second_name);
DECLARE c3 CURSOR WITH RETURN FOR SELECT name, breed, weight FROM animal WHERE name BETWEEN first_name AND second_name ORDER BY name;
OPEN c1;
FETCH c1 INTO match_name;
IF (match_name > 0) THEN SET any_name = 'TRUE'; END IF;
CLOSE c1;
OPEN c2;
FETCH c2 INTO animal_weight;
CLOSE c2;
OPEN c3;
END
SQLCRTSP1;

// ------------
// stored procedure 2
// ------------
$db2_drp_sp2 = <<<SQLDRPSP2
DROP PROCEDURE match2
SQLDRPSP2;

$db2_crt_sp2 = <<<SQLCRTSP2
CREATE PROCEDURE match2(
IN first_id INTEGER, IN second_id INTEGER,
OUT text clob(32100), OUT pict blob(32100))
DYNAMIC RESULT SETS 1
LANGUAGE SQL
BEGIN
DECLARE match_id INT DEFAULT 0;
DECLARE c1 CURSOR FOR SELECT essay FROM animal1 WHERE id IN (first_id);
DECLARE c2 CURSOR FOR SELECT picture FROM animal1 WHERE id in (second_id);
DECLARE c3 CURSOR WITH RETURN FOR SELECT id, essay, picture FROM animal1 WHERE id BETWEEN first_id AND second_id ORDER BY id;
OPEN c1;
FETCH c1 INTO text;
CLOSE c1;
OPEN c2;
FETCH c2 INTO pict;
CLOSE c2;
OPEN c3;
END
SQLCRTSP2;

// -----------------
// table animal2 (identity notes)
// -----------------
$db2_drp_animal2 = <<<SQLDRPANIMAL2
drop table animal2
SQLDRPANIMAL2;

$db2_crt_animal2 = <<<SQLCRTANIMAL2
create table animal2(
 noteid integer GENERATED BY DEFAULT AS IDENTITY,
 animalid integer,
 notetxt clob(64K),
 PRIMARY KEY(noteid))
SQLCRTANIMAL2;

$db2_idrp_animal2 = <<<SQLIDXANIMAL2
DROP INDEX index2
SQLIDXANIMAL2;

$db2_icrt_animal2 = <<<SQLIDXANIMAL2
CREATE INDEX index2 ON animal2 (animalid)
SQLIDXANIMAL2;

$db2_fkdrp_animal2 = <<<SQLFKANIMAL2
DROP TABLE fkey2
SQLFKANIMAL2;

$db2_fkcrt_animal2 = <<<SQLFKANIMAL2
CREATE TABLE fkey2 (idf INTEGER NOT NULL, FOREIGN KEY(idf) REFERENCES animal2(noteid))
SQLFKANIMAL2;


// -----------------
// table qtemp/animal
// -----------------
$db2_drp_animalq = <<<SQLDRPANIMAL
drop table qtemp/animalq
SQLDRPANIMAL;

$db2_crt_animalq = <<<SQLCRTANIMAL
DECLARE GLOBAL TEMPORARY TABLE animalq(
 id integer, breed varchar(32), name char(16),
 weight decimal(7,2), height numeric(9,2))
 ON COMMIT PRESERVE ROWS
SQLCRTANIMAL;

$db2_prep_animalq = <<<SQLADDANIMAL
insert into
animalq (id, breed, name, weight, height)
values (?,?,?,?,?)
SQLADDANIMAL;

// ------------
// read png file into hex string
// ------------
$handle = fopen($pngstar, "rb");
$hexpng = strtoupper( bin2hex( fread( $handle, filesize($pngstar) ) ) );
fclose($handle);

// ------------
// read txt file
// ------------
$handle = fopen($txtessay, "rb");
$essay = fread( $handle, filesize($txtessay) );
fclose($handle);


// ------------
// actions order
// ------------
$actions = array(
'schema-create'=>$db2_crt_schema,
'cmd_libl'=>false,
'table-animal-drop'=>$db2_drp_animal,
'table-animal-create'=>$db2_crt_animal,
'table-animal-insert'=>false,
'table-animal1-drop'=>$db2_drp_animal1,
'table-animal1-create'=>$db2_crt_animal1,
'table-animal1-insert'=>false,
'proc-sp1-drop'=>$db2_drp_sp1,
'proc-sp1-create'=>$db2_crt_sp1,
'proc-sp2-drop'=>$db2_drp_sp2,
'proc-sp2-create'=>$db2_crt_sp2,
'index-index2-drop'=>$db2_idrp_animal2,
'table-fkey-drop'=>$db2_fkdrp_animal2,
'table-animal2-drop'=>$db2_drp_animal2,
'table-animal2-create'=>$db2_crt_animal2,
'index-index2-create'=>$db2_icrt_animal2,
'table-fkey-create'=>$db2_fkcrt_animal2,
'table-animalq-drop'=>$db2_drp_animalq,
'table-animalq-create'=>$db2_crt_animalq,
'table-animalq-insert'=>false,
'cmd_end'=>false,
'kill-all-last'=>false
);


?>

