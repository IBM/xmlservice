<?php require_once('skipifdb2.inc'); ?>
<?php
// see connection.inc param details ...
require_once('connection.inc');

// arguments passed
// $argv[0] - name of program
// $argv[1] - which program to run
//  0 - INPUT getxml0 (dsplibl): good exclusive key IPC ...
//  1 - INPUT getxml1 (ls /tmp): bad wrong key IPC ...
//  2 - INPUT getxml2 (ZZCALL): good exclusive key IPC stop ...
//  3 - INPUT getxml3 (ls /tmp): free key IPC ...
if (!isset($argv[1])) dieSpeaking("Error: test was not started correctly\n");
if ($argv[1] < 0 || $argv[1] > 3) dieSpeaking("Error: bad test argv[1] = {$argv[1]}\n");
$i = $argv[1];

echo "===========test $i==============\n";

// call IBM i
if ($i5persistentconnect) $conn = db2_pconnect($database,$user,$password);
else $conn = db2_connect($database,$user,$password);
if (!$conn) dieSpeaking("Bad connect: $database,$user");

// wait my turn loop
$retry = true;
for ($h=0;$retry && $h<60;$h++) {
echo "===========loop $h==============\n";
$stmt = db2_prepare($conn, "call $procLib.iPLUG5M(?,?,?,?)");
if (!$stmt) dieSpeaking("Bad prepare: ".db2_stmt_errormsg());
switch($i) {
  case 0:
    // $ctlstart = $ctl;
    // $ctl .= " *debugproc";
    echo "INPUT getxml0 (dsplibl): good exclusive key IPC ...";
    $clobIn = getxml0();
    break;
  case 1:
    // $ctl = $ctlstart;
    echo "INPUT getxml1 (RTVSYSVAL): good exclusive key IPC ...";
    $clobIn = getxml1();
    break;
  case 2:
    echo "INPUT getxml2 (ZZCALL): good exclusive key IPC stop ...";
    $clobIn = getxml2();
    break;
  case 3:
    echo "INPUT getxml3 (ls /tmp): free key IPC ...";
    $clobIn = getxml3();
    break;
  default:
    dieSpeaking("OUTPUT (empty): nothing ...");
    break;
}
echo "ctl = $ctl\n";
$clobOut = "";
$ret=db2_bind_param($stmt, 1, "ipc", DB2_PARAM_IN);
$ret=db2_bind_param($stmt, 2, "ctl", DB2_PARAM_IN);
$ret=db2_bind_param($stmt, 3, "clobIn", DB2_PARAM_IN);
$ret=db2_bind_param($stmt, 4, "clobOut", DB2_PARAM_OUT);
$ret=db2_execute($stmt);
if (!$ret) dieSpeaking("Bad execute: ".db2_stmt_errormsg());
// ------------------
// output processing
// ------------------
echo "\n";
switch($i) {
  case 0:
    echo "OUTPUT getxml0 (dsplibl): good exclusive key IPC ...";
    //var_dump($clobOut);
    if (strpos($clobOut,"1301060")>1) echo(" ... busy 1301060 owner using");
    elseif (strpos($clobOut,"1301050")>1) echo(" ... busy 1301050 non-owner using");
    elseif (strpos($clobOut,"Library List")<1) dieSpeaking("Library List",$clobOut);
    else $retry = false;
    break;
  case 1:
    echo "OUTPUT getxml1 (RTVSYSVAL): good exclusive key IPC ...";
    //var_dump($clobOut);
    if (strpos($clobOut,"1301060")>1) echo(" ... busy 1301060 owner using");
    elseif (strpos($clobOut,"1301050")>1) echo(" ... busy 1301050 non-owner using");
    elseif (strpos($clobOut,"desc=")<1) dieSpeaking("Missing desc=\n",$clobOut);
    else $retry = false;
    break;
  case 2:
    echo "OUTPUT getxml2 (ZZCALL): good exclusive key IPC stop ...";
    //var_dump($clobOut);
    if (strpos($clobOut,"1301060")>1) echo(" ... busy 1301060 owner using");
    elseif (strpos($clobOut,"1301050")>1) echo(" ... busy 1301050 non-owner using");
    elseif (strpos($clobOut,"4444444444.44")<1) dieSpeaking("Missing ZZCALL 4444444444.44",$clobOut);
    else $retry = false;
    break;
  case 3:
    echo "OUTPUT getxml3 (ls /tmp): good free key IPC ...";
    //var_dump($clobOut);
    if (strpos($clobOut,"1301060")>1) echo(" ... busy 1301060 owner using");
    elseif (strpos($clobOut,"1301050")>1) echo(" ... busy 1301050 non-owner using");
    elseif (strpos($clobOut,"zsemfile")<1) dieSpeaking("Missing ls /tmp/zsemfile",$clobOut);
    else $retry = false;
    break;
  default:
    break;
}
echo "\n";
usleep(100000); // Sleep for 100 miliseconds;
}
// good
echo "Success\n";

function dieSpeaking($msg,$data=false) {
  echo "$msg\n";
  if ($data) echo "$data\n";
  die("i am dead\n");
}

function getxml0() {
$clob = <<<ENDPROC
<?xml version='1.0'?>
<script>
<start>myspecialkey</start>
<sh rows='on'>/QOpenSys/usr/bin/system -i 'dsplibl'</sh>
</script>
ENDPROC;
return $clob;
}

function getxml1() {
$clob = <<<ENDPROC
<?xml version='1.0'?>
<script>
<start>myspecialkey</start>
<cmd exec='rexx'>RTVSYSVAL SYSVAL(QDATETIME) RTNVAR(?)</cmd>
<cmd exec='rexx'>RTVSYSVAL SYSVAL(QDATETIME) RTNVAR(?)</cmd>
<cmd exec='rexx'>RTVSYSVAL SYSVAL(QDATETIME) RTNVAR(?)</cmd>
</script>
ENDPROC;
return $clob;
}

function getxml2() {
$clob = <<<ENDPROC
<?xml version='1.0'?>
<script>
<use>myspecialkey</use>
<pgm name='ZZCALL' lib='xyzlibxmlservicexyz'>
 <parm  io='both'>
   <data type='1A' var='INCHARA'>a</data>
 </parm>
 <parm  io='both'>
   <data type='1A' var='INCHARB'>b</data>
 </parm>
 <parm  io='both'>
   <data type='7p4' var='INDEC1'>11.1111</data>
 </parm>
 <parm  io='both'>
   <data type='12p2' var='INDEC2'>222.22</data>
 </parm>
 <parm  io='both'>
  <ds>
   <data type='1A' var='INDS1.DSCHARA'>x</data>
   <data type='1A' var='INDS1.DSCHARB'>y</data>
   <data type='7p4' var='INDS1.DSDEC1'>66.6666</data>
   <data type='12p2' var='INDS1.DSDEC2'>77777.77</data>
  </ds>
 </parm>
 <return>
  <data type='10i0'>0</data>
 </return>
</pgm>
<stop>myspecialkey</stop>
</script>
ENDPROC;
return test_lib_replace($clob);
}

function getxml3() {
$clob = <<<ENDPROC
<?xml version='1.0'?>
<script>
<sh>/QOpenSys/usr/bin/ls /tmp</sh>
</script>
ENDPROC;
return $clob;
}

?>

